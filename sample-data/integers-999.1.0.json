{"uploader":null,"packageMeta":{"homepage":"https://github.com/purescript/purescript-integers","repository":{"url":"git://github.com/purescript/purescript-integers","type":"git"},"ignore":["**/.*","bower_components","node_modules","output","bower.json","gulpfile.js","package.json"],"dependencies":{"purescript-prelude":"master"},"name":"purescript-integers","keywords":["purescript"],"description":"Integer numeric type"},"modules":[{"name":"Data.Int.Bits","comments":"This module defines bitwise operations for the `Int` type.\n","declarations":[{"children":[],"code":[["ident","(.&.)"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise AND.\n","title":"(.&.)","sourceSpan":{"start":[17,1],"name":"src/Data/Int/Bits.purs","end":[18,1]}},{"children":[],"code":[["ident","(.|.)"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise OR.\n","title":"(.|.)","sourceSpan":{"start":[21,1],"name":"src/Data/Int/Bits.purs","end":[22,1]}},{"children":[],"code":[["ident","(.^.)"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise XOR.\n","title":"(.^.)","sourceSpan":{"start":[25,1],"name":"src/Data/Int/Bits.purs","end":[26,1]}},{"children":[],"code":[["ident","shl"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise shift left.\n","title":"shl","sourceSpan":{"start":[56,1],"name":"src/Data/Int/Bits.purs","end":[66,1]}},{"children":[],"code":[["ident","shr"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise shift right.\n","title":"shr","sourceSpan":{"start":[66,1],"name":"src/Data/Int/Bits.purs","end":[76,1]}},{"children":[],"code":[["ident","zshr"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise zero-fill shift right.\n","title":"zshr","sourceSpan":{"start":[76,1],"name":"src/Data/Int/Bits.purs","end":[86,1]}},{"children":[],"code":[["ident","complement"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Bitwise NOT.\n","title":"complement","sourceSpan":{"start":[86,1],"name":"src/Data/Int/Bits.purs","end":[91,17]}}]},{"name":"Data.Int","comments":null,"declarations":[{"children":[],"code":[["ident","fromNumber"],["space"],["syntax","::"],["space"],["ctor","Number","Prim"],["space"],["syntax","->"],["space"],["ctor","Int","Prim"]],"comments":"Creates an `Int` from a `Number` value. If the value is not already an\ninteger it is rounded towards zero (so both `0.9` and `-0.9` will become\n`Int 0`).\n","title":"fromNumber","sourceSpan":{"start":[13,1],"name":"src/Data/Int.purs","end":[22,1]}},{"children":[],"code":[["ident","toNumber"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Number","Prim"]],"comments":"Converts an `Int` value back into a `Number`. Any `Int` is a valid `Number`\nso there is no loss of precision with this function.\n","title":"toNumber","sourceSpan":{"start":[22,1],"name":"src/Data/Int.purs","end":[33,1]}},{"children":[],"code":[["ident","even"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Boolean","Prim"]],"comments":"Returns whether an `Int` is an even number.\n\n    even 0 == true\n    even 1 == false\n","title":"even","sourceSpan":{"start":[33,1],"name":"src/Data/Int.purs","end":[34,1]}},{"children":[],"code":[["ident","odd"],["space"],["syntax","::"],["space"],["ctor","Int","Prim"],["space"],["syntax","->"],["space"],["ctor","Boolean","Prim"]],"comments":"The negation of `even`.\n\n    odd 0 == false\n    odd 1 == false\n","title":"odd","sourceSpan":{"start":[40,1],"name":"src/Data/Int.purs","end":[41,1]}}]}],"resolvedDependencies":{},"bookmarks":[{"package":"purescript-prelude","item":["Prelude","Unit"]},{"package":"purescript-prelude","item":["Prelude","unit"]},{"package":"purescript-prelude","item":["Prelude","($)"]},{"package":"purescript-prelude","item":["Prelude","(#)"]},{"package":"purescript-prelude","item":["Prelude","flip"]},{"package":"purescript-prelude","item":["Prelude","const"]},{"package":"purescript-prelude","item":["Prelude","asTypeOf"]},{"package":"purescript-prelude","item":["Prelude","otherwise"]},{"package":"purescript-prelude","item":["Prelude","Semigroupoid"]},{"package":"purescript-prelude","item":["Prelude","semigroupoidFn"]},{"package":"purescript-prelude","item":["Prelude","(<<<)"]},{"package":"purescript-prelude","item":["Prelude","(>>>)"]},{"package":"purescript-prelude","item":["Prelude","Category"]},{"package":"purescript-prelude","item":["Prelude","categoryFn"]},{"package":"purescript-prelude","item":["Prelude","Functor"]},{"package":"purescript-prelude","item":["Prelude","functorFn"]},{"package":"purescript-prelude","item":["Prelude","functorArray"]},{"package":"purescript-prelude","item":["Prelude","(<$>)"]},{"package":"purescript-prelude","item":["Prelude","(<#>)"]},{"package":"purescript-prelude","item":["Prelude","void"]},{"package":"purescript-prelude","item":["Prelude","Apply"]},{"package":"purescript-prelude","item":["Prelude","applyFn"]},{"package":"purescript-prelude","item":["Prelude","applyArray"]},{"package":"purescript-prelude","item":["Prelude","(<*>)"]},{"package":"purescript-prelude","item":["Prelude","Applicative"]},{"package":"purescript-prelude","item":["Prelude","applicativeFn"]},{"package":"purescript-prelude","item":["Prelude","applicativeArray"]},{"package":"purescript-prelude","item":["Prelude","return"]},{"package":"purescript-prelude","item":["Prelude","liftA1"]},{"package":"purescript-prelude","item":["Prelude","Bind"]},{"package":"purescript-prelude","item":["Prelude","bindFn"]},{"package":"purescript-prelude","item":["Prelude","bindArray"]},{"package":"purescript-prelude","item":["Prelude","(>>=)"]},{"package":"purescript-prelude","item":["Prelude","Monad"]},{"package":"purescript-prelude","item":["Prelude","monadFn"]},{"package":"purescript-prelude","item":["Prelude","monadArray"]},{"package":"purescript-prelude","item":["Prelude","liftM1"]},{"package":"purescript-prelude","item":["Prelude","ap"]},{"package":"purescript-prelude","item":["Prelude","Semigroup"]},{"package":"purescript-prelude","item":["Prelude","(<>)"]},{"package":"purescript-prelude","item":["Prelude","(++)"]},{"package":"purescript-prelude","item":["Prelude","semigroupString"]},{"package":"purescript-prelude","item":["Prelude","semigroupUnit"]},{"package":"purescript-prelude","item":["Prelude","semigroupFn"]},{"package":"purescript-prelude","item":["Prelude","semigroupOrdering"]},{"package":"purescript-prelude","item":["Prelude","semigroupArray"]},{"package":"purescript-prelude","item":["Prelude","Semiring"]},{"package":"purescript-prelude","item":["Prelude","semiringInt"]},{"package":"purescript-prelude","item":["Prelude","semiringNumber"]},{"package":"purescript-prelude","item":["Prelude","semiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(+)"]},{"package":"purescript-prelude","item":["Prelude","(*)"]},{"package":"purescript-prelude","item":["Prelude","Ring"]},{"package":"purescript-prelude","item":["Prelude","ringInt"]},{"package":"purescript-prelude","item":["Prelude","ringNumber"]},{"package":"purescript-prelude","item":["Prelude","ringUnit"]},{"package":"purescript-prelude","item":["Prelude","(-)"]},{"package":"purescript-prelude","item":["Prelude","negate"]},{"package":"purescript-prelude","item":["Prelude","ModuloSemiring"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringInt"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringNumber"]},{"package":"purescript-prelude","item":["Prelude","moduloSemiringUnit"]},{"package":"purescript-prelude","item":["Prelude","(/)"]},{"package":"purescript-prelude","item":["Prelude","DivisionRing"]},{"package":"purescript-prelude","item":["Prelude","divisionRingNumber"]},{"package":"purescript-prelude","item":["Prelude","divisionRingUnit"]},{"package":"purescript-prelude","item":["Prelude","Num"]},{"package":"purescript-prelude","item":["Prelude","numNumber"]},{"package":"purescript-prelude","item":["Prelude","numUnit"]},{"package":"purescript-prelude","item":["Prelude","Eq"]},{"package":"purescript-prelude","item":["Prelude","(==)"]},{"package":"purescript-prelude","item":["Prelude","(/=)"]},{"package":"purescript-prelude","item":["Prelude","eqBoolean"]},{"package":"purescript-prelude","item":["Prelude","eqInt"]},{"package":"purescript-prelude","item":["Prelude","eqNumber"]},{"package":"purescript-prelude","item":["Prelude","eqChar"]},{"package":"purescript-prelude","item":["Prelude","eqString"]},{"package":"purescript-prelude","item":["Prelude","eqUnit"]},{"package":"purescript-prelude","item":["Prelude","eqArray"]},{"package":"purescript-prelude","item":["Prelude","eqOrdering"]},{"package":"purescript-prelude","item":["Prelude","Ordering"]},{"package":"purescript-prelude","item":["Prelude","Ord"]},{"package":"purescript-prelude","item":["Prelude","ordBoolean"]},{"package":"purescript-prelude","item":["Prelude","ordInt"]},{"package":"purescript-prelude","item":["Prelude","ordNumber"]},{"package":"purescript-prelude","item":["Prelude","ordString"]},{"package":"purescript-prelude","item":["Prelude","ordChar"]},{"package":"purescript-prelude","item":["Prelude","ordUnit"]},{"package":"purescript-prelude","item":["Prelude","ordArray"]},{"package":"purescript-prelude","item":["Prelude","ordOrdering"]},{"package":"purescript-prelude","item":["Prelude","(<)"]},{"package":"purescript-prelude","item":["Prelude","(>)"]},{"package":"purescript-prelude","item":["Prelude","(<=)"]},{"package":"purescript-prelude","item":["Prelude","(>=)"]},{"package":"purescript-prelude","item":["Prelude","Bounded"]},{"package":"purescript-prelude","item":["Prelude","boundedBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedUnit"]},{"package":"purescript-prelude","item":["Prelude","boundedOrdering"]},{"package":"purescript-prelude","item":["Prelude","Lattice"]},{"package":"purescript-prelude","item":["Prelude","latticeBoolean"]},{"package":"purescript-prelude","item":["Prelude","latticeUnit"]},{"package":"purescript-prelude","item":["Prelude","(||)"]},{"package":"purescript-prelude","item":["Prelude","(&&)"]},{"package":"purescript-prelude","item":["Prelude","BoundedLattice"]},{"package":"purescript-prelude","item":["Prelude","boundedLatticeBoolean"]},{"package":"purescript-prelude","item":["Prelude","boundedLatticeUnit"]},{"package":"purescript-prelude","item":["Prelude","ComplementedLattice"]},{"package":"purescript-prelude","item":["Prelude","complementedLatticeBoolean"]},{"package":"purescript-prelude","item":["Prelude","complementedLatticeUnit"]},{"package":"purescript-prelude","item":["Prelude","DistributiveLattice"]},{"package":"purescript-prelude","item":["Prelude","distributiveLatticeBoolean"]},{"package":"purescript-prelude","item":["Prelude","distributiveLatticeUnit"]},{"package":"purescript-prelude","item":["Prelude","BooleanAlgebra"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraBoolean"]},{"package":"purescript-prelude","item":["Prelude","booleanAlgebraUnit"]},{"package":"purescript-prelude","item":["Prelude","Show"]},{"package":"purescript-prelude","item":["Prelude","showBoolean"]},{"package":"purescript-prelude","item":["Prelude","showInt"]},{"package":"purescript-prelude","item":["Prelude","showNumber"]},{"package":"purescript-prelude","item":["Prelude","showChar"]},{"package":"purescript-prelude","item":["Prelude","showString"]},{"package":"purescript-prelude","item":["Prelude","showUnit"]},{"package":"purescript-prelude","item":["Prelude","showArray"]},{"package":"purescript-prelude","item":["Prelude","showOrdering"]},{"package":"purescript-prelude","item":["Prelude.Unsafe","unsafeIndex"]},{"package":null,"item":["Data.Int.Bits","(.&.)"]},{"package":null,"item":["Data.Int.Bits","(.|.)"]},{"package":null,"item":["Data.Int.Bits","(.^.)"]},{"package":null,"item":["Data.Int.Bits","shl"]},{"package":null,"item":["Data.Int.Bits","shr"]},{"package":null,"item":["Data.Int.Bits","zshr"]},{"package":null,"item":["Data.Int.Bits","complement"]},{"package":null,"item":["Data.Int","fromNumber"]},{"package":null,"item":["Data.Int","toNumber"]},{"package":null,"item":["Data.Int","even"]},{"package":null,"item":["Data.Int","odd"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Eff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","Pure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","runPure"]},{"package":"purescript-eff","item":["Control.Monad.Eff","functorEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applyEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","applicativeEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","bindEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","monadEff"]},{"package":"purescript-eff","item":["Control.Monad.Eff","untilE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","whileE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","forE"]},{"package":"purescript-eff","item":["Control.Monad.Eff","foreachE"]},{"package":"purescript-eff","item":["Control.Monad.Eff.Unsafe","unsafeInterleaveEff"]},{"package":"purescript-console","item":["Console","CONSOLE"]},{"package":"purescript-console","item":["Console","log"]},{"package":"purescript-console","item":["Console","error"]},{"package":"purescript-console","item":["Console","print"]}],"version":"999.1.0","github":["purescript","purescript-integers"],"versionTag":"v999.1.0"}
